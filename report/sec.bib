% CFI
@inproceedings{cfi,
  title     = {Control-flow integrity},
  author    = {Abadi, Mart{\'\i}n and Budiu, Mihai and Erlingsson, Ulfar and Ligatti, Jay},
  crossref  = {CCS05}
}

@inproceedings{burow:cfixx,
  title     = {{CFIXX: Object Type Integrity for C++ Virtual Dispatch}},
  author    = {Nathan Burow and Derrick McKee and Scott A. Carr and Mathias Payer},
  crossref  = {NDSS18}
}

@inproceedings{zhang:bincfi,
  title     = {{Control Flow Integrity for COTS Binaries}},
  author    = {Zhang, Mingwei and Sekar, R},
  crossref  = {SEC13}
}

@inproceedings{zhang:ccfir,
  title     = {Practical control flow integrity and randomization for binary executables},
  author    = {Zhang, Chao and Wei, Tao and Chen, Zhaofeng and Duan, Lei and Szekeres, Laszlo and McCamant, Stephen and Song, Dawn and Zou, Wei},
  crossref  = {SP13}
}

@inproceedings{tice:ifcc,
  title     = {{Enforcing Forward-Edge Control-Flow Integrity in GCC \& LLVM}},
  author    = {Tice, Caroline and Roeder, Tom and Collingbourne, Peter and Checkoway, Stephen and Erlingsson, {\'U}lfar and Lozano, Luis and Pike, Geoff},
  crossref  = {SEC14}
}

@inproceedings{niu:mcfi,
  title     = {Modular control-flow integrity},
  author    = {Niu, Ben and Tan, Gang},
  crossref  = {PLDI14}
}

@inproceedings{niu:picfi,
  title     = {Per-input control-flow integrity},
  author    = {Niu, Ben and Tan, Gang},
  crossref  = {CCS15}
}

@InProceedings{hu:ucfi,
  title         = {{Enforcing Unique Code Target Property for Control-Flow Integrity}},
  author        = {Hong Hu and Chenxiong Qian and Carter Yagemann and Simon Pak Ho Chung and William R. Harris and Taesoo Kim and Wenke Lee},
  crossref      = {CCS18},
  www-section   = sec-syssec,
  www-url       = "https://github.com/uCFI-GATech",
}

@inproceedings{liu:flowguard,
  title     = {Transparent and efficient {CFI} enforcement with intel processor trace},
  author    = {Liu, Yutao and Shi, Peitao and Wang, Xinran and Chen, Haibo and Zang, Binyu and Guan, Haibing},
  crossref  = {HPCA17}
}

@inproceedings{pappas:kbouncer,
  title     = {{Transparent ROP Exploit Mitigation Using Indirect Branch Tracing}},
  author    = {Pappas, Vasilis and Polychronakis, Michalis and Keromytis, Angelos D},
  crossref  = {SEC13}
}

@inproceedings{van:patharmor,
  title     = {Practical context-sensitive {CFI}},
  author    = {van der Veen, Victor and Andriesse, Dennis and G{\"o}kta{\c{s}}, Enes and Gras, Ben and Sambuc, Lionel and Slowinska, Asia and Bos, Herbert and Giuffrida, Cristiano},
  crossref  = {CCS15}
}

@article{cheng:ropecker,
  title     = {ROPecker: A generic and practical approach for defending against ROP attack},
  author    = {Cheng, Yueqiang and Zhou, Zongwei and Miao, Yu and Ding, Xuhua and Deng, Robert H},
  crossref  = {NDSS14}
}

@inproceedings{prakash:vfguard,
  title={{vfGuard: Strict Protection for Virtual Function Calls in COTS C++ Binaries.}},
  author={Prakash, Aravind and Hu, Xunchao and Yin, Heng},
  crossref = {NDSS15}
}

@inproceedings{grossklags:tcfi,
  title={$\tau${CFI: Type-Assisted Control Flow Integrity for x86-64 Binaries}},
  author={Grossklags, Jens and Eckert, Claudia},
  crossref = {RAID18}
}

@inproceedings{gu:pt-cfi,
  title={PT-CFI: Transparent backward-edge control flow violation detection using intel processor trace},
  author={Gu, Yufei and Zhao, Qingchuan and Zhang, Yinqian and Lin, Zhiqiang},
  crossref = {CODASPY17}
}

@inproceedings{ge:griffin,
  title     = {Griffin: Guarding control flows using intel processor trace},
  author    = {Ge, Xinyang and Cui, Weidong and Jaeger, Trent},
  crossref  = {ASPLOS17}
}

@inproceedings{van:typearmor,
  title     = {A tough call: Mitigating advanced code-reuse attacks at the binary level},
  author    = {van der Veen, Victor and G{\"o}ktas, Enes and Contag, Moritz and Pawoloski, Andre and Chen, Xi and Rawat, Sanjay and Bos, Herbert and Holz, Thorsten and Athanasopoulos, Elias and Giuffrida, Cristiano},
  crossref  = {SP16}
}

@misc{clang:cfi,
  title   = {{Clang 10 documentation: CONTROL FLOW INTEGRITY}},
  author  = {{The Clang Team}},
  note    = {\url{https://clang.llvm.org/docs/ControlFlowIntegrity.html}},
  year    = {2019},
}

@inproceedings{khandaker:oscfi,
  title     = {{Origin-sensitive Control Flow Integrity}},
  author    = {Khandaker, Mustakimur Rahman and Liu, Wenqing and Naser, Abu and Wang, Zhi and Yang, Jie},
  crossref  = {SEC19}
}

% XoM - Non-disclosure

@inproceedings{backes:xnr,
  title={You can run but you can't read: Preventing disclosure exploits in executable code},
  author={Backes, Michael and Holz, Thorsten and Kollenda, Benjamin and Koppe, Philipp and N{\"u}rnberger, Stefan and Pewny, Jannik},
  crossref = {CCS14}
}

@inproceedings{gionta:hidem,
  title={{HideM: Protecting the Contents of Userspace Memory in the Face of Disclosure Vulnerabilities}},
  author={Gionta, Jason and Enck, William and Ning, Peng},
  crossref = {CODASPY15},
}

@inproceedings{crane:readactor,
  title     = {{Readactor: Practical Code Randomization Resilient to Memory Disclosure}},
  author    = {Crane, Stephen and Liebchen, Christopher and Homescu, Andrei and Davi, Lucas and Larsen, Per and Sadeghi, Ahmad-Reza and Brunthaler, Stefan and Franz, Michael},
  crossref  = {SP15},
}

@inproceedings{crane:readactor++,
  title     = {{It's a TRaP: Table Randomization and Protection Against Function-reuse Attacks}},
  author    = {Crane, Stephen J and Volckaert, Stijn and Schuster, Felix and Liebchen, Christopher and Larsen, Per and Davi, Lucas and Sadeghi, Ahmad-Reza and Holz, Thorsten and De Sutter, Bjorn and Franz, Michael},
  crossref  = {SP15},
}

@inproceedings{tang:heisenbyte,
  title={Heisenbyte: Thwarting memory disclosure attacks using destructive code reads},
  author={Tang, Adrian and Sethumadhavan, Simha and Stolfo, Salvatore},
  crossref={CCS15}
}

@inproceedings{braden:lr2,
  title={{Leakage-Resilient Layout Randomization for Mobile Devices}},
  author={Braden, Kjell and Davi, Lucas and Liebchen, Christopher and Sadeghi, Ahmad-Reza and Crane, Stephen and Franz, Michael and Larsen, Per},
  crossref  = {NDSS16}
}

@inproceedings{werner:near,
  title={No-execute-after-read: Preventing code disclosure in commodity software},
  author={Werner, Jan and Baltas, George and Dallara, Rob and Otterness, Nathan and Snow, Kevin Z and Monrose, Fabian and Polychronakis, Michalis},
  crossref = {ASIACCS16}
}

@inproceedings{pomonis:krx,
  title={{kR\^{} X: Comprehensive Kernel Protection against Just-In-Time Code Reuse}},
  author={Pomonis, Marios and Petsios, Theofilos and Keromytis, Angelos D and Polychronakis, Michalis and Kemerlis, Vasileios P},
  crossref={EUROSYS17}
}

@inproceedings{chen:codearmor,
  title={{CodeArmor: Virtualizing The Code Space to Counter Disclosure Attacks}},
  author={Chen, Xi and Bos, Herbert and Giuffrida, Cristiano},
  crossref  = {ESP17}
}




% Diversification via Randomization
@inproceedings{kil:aslp,
  title     = {Address space layout permutation ({ASLP}): Towards fine-grained randomization of commodity software},
  author    = {Kil, Chongkyung and Jun, Jinsuk and Bookholt, Christopher and Xu, Jun and Ning, Peng},
  crossref  = {ACSAC06}
}

@inproceedings{hiser:ilr,
  title={{ILR: Where'd My Gadgets Go?}},
  author={Hiser, Jason and Nguyen-Tuong, Anh and Co, Michele and Hall, Matthew and Davidson, Jack W},
  crossref = {SP12}
}

@inproceedings{pappas:smashing,
  title={Smashing the gadgets: Hindering return-oriented programming using in-place code randomization},
  author={Pappas, Vasilis and Polychronakis, Michalis and Keromytis, Angelos D},
  crossref  = {SP12}
}

@inproceedings{wartell:stirring,
  title     = {Binary stirring: Self-randomizing instruction addresses of legacy x86 binary code},
  author    = {Wartell, Richard and Mohan, Vishwath and Hamlen, Kevin W and Lin, Zhiqiang},
  crossref  = {CCS12}
}

@inproceedings{backes:oxymoron,
  title     = {{Oxymoron: Making Fine-Grained Memory Randomization Practical by Allowing Code Sharing}},
  author    = {Backes, Michael and N{\"u}rnberger, Stefan},
  crossref  = {SEC14},
}

@inproceedings{davi:isomeron,
  title     = {{Isomeron: Code Randomization Resilient to (Just-In-Time) Return-Oriented Programming}},
  author    = {Davi, Lucas and Liebchen, Christopher and Sadeghi, Ahmad-Reza and Snow, Kevin Z and Monrose, Fabian},
  crossref  = {NDSS15},
}

@inproceedings{koo:juggling,
  title     = {Juggling the gadgets: Binary-level code randomization using instruction displacement},
  author    = {Koo, Hyungjoon and Polychronakis, Michalis},
  crossref  = {ASIACCS16}
}

@inproceedings{gionta:khide,
  title={Preventing kernel code-reuse attacks through disclosure resistant code diversification},
  author={Gionta, Jason and Enck, William and Larsen, Per},
  crossref = {CNS16},
}

@inproceedings{sun:blender,
  title     = {Blender: Self-randomizing address space layout for android apps},
  author    = {Sun, Mingshen and Lui, John CS and Zhou, Yajin},
  crossref  = {RAID16}
}

@inproceedings{koo:ccr,
  title={Compiler-assisted Code Randomization},
  author={Koo, Hyungjoon and Chen, Yaohui and Lu, Long and Kemerlis, Vasileios P and Polychronakis, Michalis},
  crossref = {SP18}
}

@inproceedings{crane:cr,
  title={{Code Randomization: Haven't We Solved This Problem Yet?}},
  author={Crane, Stephen and Homescu, Andrei and Larsen, Per},
  booktitle={Cybersecurity Development (SecDev), IEEE},
  pages={124--129},
  year={2016},
  organization={IEEE}
}


% Isolation / Encryption
@inproceedings{kuznetsov:cpi,
  title     ={{Code-Pointer Integrity}},
  author    = {Kuznetsov, Volodymyr and Szekeres, L{\'a}szl{\'o} and Payer, Mathias and Candea, George and Sekar, R and Song, Dawn},
  crossref  = {OSDI14},
}

@inproceedings{lu:aslr,
  title     = {{ASLR-Guard: Stopping Address Space Leakage for Code Reuse Attacks}},
  author    = {Lu, Kangjie and Song, Chengyu and Lee, Byoungyoung and Chung, Simon P and Kim, Taesoo and Lee, Wenke},
  crossref  = {CCS15},
}

@inproceedings{mashtizadeh:ccfi,
  title     ={{CCFI: Cryptographically Enforced Control Flow Integrity}},
  author    ={Mashtizadeh, Ali Jose and Bittau, Andrea and Boneh, Dan and Mazi{\`e}res, David},
  crossref  = {CCS15},
}


% Re-Randomization
@inproceedings{giuffrida:asr3,
  title     = {{Enhanced Operating System Security Through Efficient and Fine-grained Address Space Randomization}},
  author    = {Giuffrida, Cristiano and Kuijsten, Anton and Tanenbaum, Andrew S},
  crossref  = {SEC12},
}

@inproceedings{bigelow:tasr,
  title     = {{Timely Rerandomization for Mitigating Memory Disclosures}},
  author    = {Bigelow, David and Hobson, Thomas and Rudd, Robert and Streilein, William and Okhravi, Hamed},
  crossref  = {CCS15},
}

@inproceedings{lu:runtimeASLR,
  title     = {{How to Make ASLR Win the Clone Wars: Runtime Re-Randomization}},
  author    = {Lu, Kangjie and Lee, Wenke and N{\"u}rnberger, Stefan and Backes, Michael},
  crossref  = {NDSS16},
}

@inproceedings{williams:shuffler,
  title     = {{Shuffler: Fast and Deployable Continuous Code Re-Randomization}},
  author    = {Williams-King, David and Gobieski, Graham and Williams-King, Kent and Blake, James P and Yuan, Xinhao and Colp, Patrick and Zheng, Michelle and Kemerlis, Vasileios P and Yang, Junfeng and Aiello, William},
  crossref  = {OSDI16},
}

@article{conti:selfrando,
  title={Selfrando: Securing the tor browser against de-anonymization exploits},
  author={Conti, Mauro and Crane, Stephen and Frassetto, Tommaso and Homescu, Andrei and Koppen, Georg and Larsen, Per and Liebchen, Christopher and Perry, Mike and Sadeghi, Ahmad-Reza},
  journal={Proceedings on Privacy Enhancing Technologies},
  volume={2016},
  number={4},
  pages={454--469},
  year={2016},
  publisher={De Gruyter Open}
}

@inproceedings{wang:reranz,
  title     = {{Reranz: A Light-weight Virtual Machine to Mitigate Memory Disclosure Attacks}},
  author    = {Wang, Zhe and Wu, Chenggang and Li, Jianjun and Lai, Yuanming and Zhang, Xiangyu and Hsu, Wei-Chung and Cheng, Yueqiang},
  crossref  = {VEE17}
}


% Attacks
@inproceedings{checkoway:rlibcwor,
 author = {{Checkoway, Stephen and Davi, Lucas and Dmitrienko, Alexandra and Sadeghi, Ahmad-Reza and Shacham, Hovav and Winandy, Marcel}},
 title = {Return-oriented Programming Without Returns},
 crossref = {CCS10}
}

@inproceedings{shacham:rop,
  title     = {The geometry of innocent flesh on the bone: Return-into-libc without function calls (on the x86)},
  author    = {Shacham, Hovav},
  crossref  = {CCS07}
}

@inproceedings{snow:jitrop,
  title     = {{Just-in-time Code Reuse: On the Effectiveness of Fine-grained Address Space Layout Randomization}},
  author    = {Snow, Kevin Z and Monrose, Fabian and Davi, Lucas and Dmitrienko, Alexandra and Liebchen, Christopher and Sadeghi, Ahmad-Reza},
  crossref  = {SP13}
}
@inproceedings{goktas:out,
  title={Out of control: Overcoming control-flow integrity},
  author={G{\"o}ktas, Enes and Athanasopoulos, Elias and Bos, Herbert and Portokalidis, Georgios},
  crossref = {SP14}
}

@inproceedings{bittau:brop,
  title={Hacking blind},
  author={Bittau, Andrea and Belay, Adam and Mashtizadeh, Ali and Mazi{\`e}res, David and Boneh, Dan},
  crossref  = {SP14}
}
@inproceedings{carlini:rop,
  title={ROP is Still Dangerous: Breaking Modern Defenses.},
  author={Carlini, Nicholas and Wagner, David},
  crossref = {SEC14}
}

@inproceedings{jop-bletsch-asiaccs11,
  title = {{Jump-Oriented Programming: A New Class of Code-Reuse Attack}},
  author = {Bletsch, Tyler and Jiang, Xuxian and Freeh, Vince W. and Liang, Zhenkai},
  crossref = {ASIACCS11},
  pages = {30–40},
  numpages = {11},
}

@inproceedings{davi:stitching,
  title={Stitching the Gadgets: On the Ineffectiveness of Coarse-Grained Control-Flow Integrity Protection.},
  author={Davi, Lucas and Sadeghi, Ahmad-Reza and Lehmann, Daniel and Monrose, Fabian},
  crossref = {SEC14}
}

@inproceedings{goktacs:size,
  title={Size does matter: Why using gadget-chain length to prevent code-reuse attacks is hard},
  author={G{\"o}kta{\c{s}}, Enes and Athanasopoulos, Elias and Polychronakis, Michalis and Bos, Herbert and Portokalidis, Georgios},
  crossref = {SEC14}
}

@inproceedings{evans:missingcpi,
  title     = {Missing the point {(er)}: On the effectiveness of code pointer integrity},
  author    = {Evans, Isaac and Fingeret, Sam and Gonzalez, Julian and Otgonbaatar, Ulziibayar and Tang, Tiffany and Shrobe, Howard and Sidiroglou-Douskos, Stelios and Rinard, Martin and Okhravi, Hamed},
  crossref  = {SP15}
}

@inproceedings{carlini:cfb,
  title     = {{Control-Flow Bending: On the Effectiveness of Control-Flow Integrity}},
  author    = {Carlini, Nicholas and Barresi, Antonio and Payer, Mathias and Wagner, David and Gross, Thomas R},
  crossref  = {SEC15}
}

@inproceedings{cjujutsu-evans-ccs15,
  title = {{Control Jujutsu: On the Weaknesses of Fine-Grained Control Flow Integrity}},
  author = {Evans, Isaac and Long, Fan and Otgonbaatar, Ulziibayar and Shrobe, Howard and Rinard, Martin and Okhravi, Hamed and Sidiroglou-Douskos, Stelios},
  crossref  = {CCS15},
  pages = {901–913},
  numpages = {13},
}

@inproceedings{schuster:coop,
  title     = {{Counterfeit Object-oriented Programming: On the Difficulty of Preventing Code Reuse Attacks in C++ Applications}},
  author    = {Schuster, Felix and Tendyck, Thomas and Liebchen, Christopher and Davi, Lucas and Sadeghi, Ahmad-Reza and Holz, Thorsten},
  crossref  = {SP15},
}

@inproceedings{gawlik:crop,
  title     = {Enabling Client-Side Crash-Resistance to Overcome Diversification and Information Hiding.},
  author    = {Gawlik, Robert and Kollenda, Benjamin and Koppe, Philipp and Garmany, Behrad and Holz, Thorsten},
  crossref  = {NDSS16}
}

@inproceedings{oikonomopoulos:pokingcpi,
  title     = {Poking Holes in Information Hiding.},
  author    = {Oikonomopoulos, Angelos and Athanasopoulos, Elias and Bos, Herbert and Giuffrida, Cristiano},
  crossref  = {SEC16},
}

@inproceedings{goktas:information-hiding,
  author    = {Enes G{\"o}kta{\c s} and Robert Gawlik and Benjamin Kollenda and Elias Athanasopoulos and Georgios Portokalidis and Cristiano Giuffrida and Herbert Bos},
  title     = {{Undermining Information Hiding (and What to Do about It)}},
  crossref  = {SEC16},
}

@inproceedings{rudd:aocr,
  title     = {{Address-Oblivious Code Reuse: On the Effectiveness of Leakage Resilient Diversity}},
  author    = {Rudd, Robert and Skowyra, Richard and Bigelow, David and Dedhia, Veer and Hobson, Thomas and Crane, Stephen and Liebchen, Christopher and Larsen, Per and Davi, Lucas and Franz, Michael and others},
  crossref  = {NDSS17},
}

@inproceedings{van:newton,
  title     = {The Dynamics of Innocent Flesh on the Bone: Code Reuse Ten Years Later},
  author    = {van der Veen, Victor and Andriesse, Dennis and Stamatogiannakis, Manolis and Chen, Xi and Bos, Herbert and Giuffrdia, Cristiano},
  crossref  = {CCS17}
}

@inproceedings{goktas:position,
  title={Position-independent Code Reuse: On the Effectiveness of ASLR in the Absence of Information Disclosure},
  author={G{\"o}ktas, Enes and Kollenda, Benjamin and Koppe, Philipp and Bosman, Erik and Portokalidis, Georgios and Holz, Thorsten and Bos, Herbert and Giuffrida, Cristiano},
  crossref = {ESP18}
}

@inproceedings{contag:weaknesses,
  title     = {{On the Weaknesses of Function Table Randomization}},
  author    = {Contag, Moritz and Gawlik, Robert and Pawlowski, Andre and Holz, Thorsten},
  crossref  = {DIMVA18}
}

@article{jafari:effectiveness,
  title={On the Effectiveness of Type-based Control Flow Integrity},
  author={Jafari, Saman and Arshad, Sajjad and Robertson, William and Kirda, Engin and Okhravi, Hamed},
  crossref = {ACSAC18}
}



% Pointer safety
@InProceedings{nagarakatte:softbound,
  title     = {{SoftBound: Highly Compatible and Complete Spatial Memory Safety for C}},
  author    = {Nagarakatte, Santosh and Zhao, Jianzhou and Martin, Milo MK and Zdancewic, Steve},
  crossref  = {PLDI09},
}

@inproceedings{nagarakatte:cets,
  title     = {{CETS: Compiler Enforced Temporal Safety for C}},
  author    = {Nagarakatte, Santosh and Zhao, Jianzhou and Martin, Milo MK and Zdancewic, Steve},
  crossref  = {ISMM10},
}

@inproceedings{oscar-dang-sec17,
  title     = {{Oscar: A Practical Page-Permissions-Based Scheme for Thwarting Dangling Pointers}},
  author    = {Dang, Thurston H.Y. and Maniatis, Petros and Wagner, David},
  crossref  = {SEC17},
}

% Surveys
@inproceedings{szekeres:sok,
  title={Sok: Eternal war in memory},
  author={Szekeres, Laszlo and Payer, Mathias and Wei, Tao and Song, Dawn},
  crossref = {SP13}
}

@inproceedings{larsen2014sok,
  title={SoK: Automated software diversity},
  author={Larsen, Per and Homescu, Andrei and Brunthaler, Stefan and Franz, Michael},
  crossref = {SP14}
}

@article{burow:cfi,
  title={Control-flow integrity: Precision, security, and performance},
  author={Burow, Nathan and Carr, Scott A and Nash, Joseph and Larsen, Per and Franz, Michael and Brunthaler, Stefan and Payer, Mathias},
  journal={ACM Computing Surveys (CSUR)},
  volume={50},
  number={1},
  pages={16},
  year={2017},
  publisher={ACM}
}

@article{song2018sok,
  title={SoK: Sanitizing for Security},
  author={Song, Dokyung and Lettner, Julian and Rajasekaran, Prabhu and Na, Yeoul and Volckaert, Stijn and Larsen, Per and Franz, Michael},
  crossref = {SP18}
}

% misc
@misc{github:wrk,
  author    = {Will Glozer},
  title     = {{a HTTP benchmarking tool}},
  note      = {\url{https://github.com/wg/wrk}},
  year      = {2019},
}

@misc{pgbench:web,
  title     = {{pgbench: PostgreSQL Client Applications	}},
  note      = {\url{https://www.postgresql.org/docs/current/pgbench.html}},
  year      = {2020},
}

@misc{man:elf,
  author    = {Michael Kerrisk},
  title     = {{Linux Programmer's Manual: ELF(5)}},
  year      = {2018},
  note      = {\url{http://man7.org/linux/man-pages/man5/elf.5.html}}
}

@misc{intel:sdm,
  author    = {{Intel Corporation}},
  title     = {{Intel 64 and IA-32 Architectures Software Developer's Manual}},
  note      = {\url{https://software.intel.com/en-us/articles/intel-sdm}},
  year      = {2019},
}

@misc{intel:xeon-scalable,
  author    = {{Intel Corporation}},
  title     = {{INTEL~\textregistered~XEON~\textregistered~SCALABLE PROCESSORS}},
  note      = {\url{https://www.intel.com/content/www/us/en/products/processors/xeon/scalable.html}},
  year      = {2019},
}

@misc{armv83a,
  author    = {{ARM Limited}},
  title     = {{ARM Architecture Reference Manual: ARMv8, for ARMv8-A architecture profile}},
  note      = {\url{https://static.docs.arm.com/ddi0487/ca/DDI0487C_a_armv8_arm.pdf}},
  year      = {2017},
}

@misc{amazon:c5,
  author    = {Amazon},
  title     = {{Amazon EC2 C5 Instances}},
  note      = {\url{https://aws.amazon.com/ec2/instance-types/c5/}},
  year      = {2019}
}

@misc{arm:xom,
  author    = {ARM},
  title     = {{ARM Compiler Software Development Guide: 2.21 Execute-only memory}},
  note      = {\url{http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0471j/chr1368698326509.html}},
  year      = {2019},
}

@misc{pax-aslr,
  author    = {{The PAX Team}},
  title     = {{Address Space Layout Randomization}},
  year      = {2003},
  note      = {\url{https://pax.grsecurity.net/docs/aslr.txt}}
}

% ISR
@inproceedings{kc:isr,
  title={Countering code-injection attacks with instruction-set randomization},
  author={Kc, Gaurav S and Keromytis, Angelos D and Prevelakis, Vassilis},
  crossref = {CCS03},
}
% GOT protection
@misc{hardening-fedora,
  author    = {{Fedora}},
  title     = {{Hardening Flags Updates for Fedora 28}},
  year      = {2018},
  note      = {\url{https://fedoraproject.org/wiki/Changes/HardeningFlags28}}
}
%MPK
@misc{mpk-glibc-larabel,
  author    = {{Michael Larabel}},
  title     = {{Glibc Rolls Out Support For Memory Protection Keys}},
  year      = {2017},
  note      = {\url{https://www.phoronix.com/scan.php?page=news_item&px=Glibc-Memory-Protection-Keys}}
}
%Intel SGX enclave
@misc{sgx-intel,
  author    = {{Shawn Knight}},
  title     = {{Intel to enable SGX technology on future Skylake CPUs}},
  year      = {2015},
  note      = {\url{https://www.techspot.com/news/62324-intel-enable-sgx-technology-future-skylake-cpus.html}}
}

%Intel PT (Processor Trace)
@misc{intel-pt,
  author    = {{James R.}},
  title     = {{Proccesor Tracing}},
  year      = {2013},
  note      = {\url{https://software.intel.com/en-us/blogs/2013/09/18/processor-tracing}}
}

%DEP
% FROM: Size Does Matter Goktas
@misc{dep-windows,
  author    = {{S. ANDERSEN, V. ABELLA}},
  title     = {{Changes to functionality in Microsoft Windows XP Service Pack 2, part 3: Memory protection technologies, Data Execution Prevention. Microsoft TechNet Library}},
  year      = {September 2004},
  note      = {\url{http://technet.microsoft.com/en-us/library/bb457155.aspx}}
}

@inproceedings{return-to-libc-tran,
  title={On the expressiveness of return-into-libc attacks},
  author={Tran, Minh and Etheridge, Mark and Bletsch, Tyler and Jiang, Xuxian and Freeh, Vincent and Ning, Peng},
  booktitle={International Workshop on Recent Advances in Intrusion Detection},
  pages={121--141},
  year={2011},
  organization={Springer}
}

%Code injection via stack overflow
@article{aleph:stack-smash,
  title={Smashing the stack for fun and profit},
  author={Aleph, One},
  journal={http://www. shmoo. com/phrack/Phrack49/p49-14},
  year={1996}
}

%Code injection via heap
@misc{kaempf:heap-vudo,
  title={Vudo malloc tricks. Phrack Magazine, 57 (8), August 2001},
  author={Kaempf, Michel}
}

%Code injection via heap 2
@article{heap-free,
  title={Once upon a free ()..},
  author={Anonimo, Autore},
  journal={Phrack Magazine},
  volume={11},
  number={57},
  year={2001}
}

%DOP
@inproceedings{hu-dop,
  title={Data-oriented programming: On the expressiveness of non-control data attacks},
  author={Hu, Hong and Shinde, Shweta and Adrian, Sendroiu and Chua, Zheng Leong and Saxena, Prateek and Liang, Zhenkai},
  booktitle={Security and Privacy (SP), 2016 IEEE Symposium on},
  pages={969--986},
  year={2016},
  organization={IEEE}
}


% others
@inproceedings{kollenda:auto-crash-resist,
  title={{Towards Automated Discovery of Crash-resistant Primitives in Binary Executables}},
  author={Kollenda, Benjamin and G{\"o}kta{\c{s}}, Enes and Blazytko, Tim and Koppe, Philipp and Gawlik, Robert and Konoth, Radhesh Krishnan and Giuffrida, Cristiano and Bos, Herbert and Holz, Thorsten},
  crossref = {DSN17}
}
@inproceedings{gawlik:crash-resist,
  title={{Enabling Client-Side Crash-Resistance to Overcome Diversification and Information Hiding}},
  author={Gawlik, Robert and Kollenda, Benjamin and Koppe, Philipp and Garmany, Behrad and Holz, Thorsten},
  crossref = {NDSS16},
}


% Low-latency Javascript bugs that does not involve I/O
@misc{bugs-1,
  title   = {{Security: V8 JIT escape analysis bug}},
  author  = {{Chromium Bugs}},
  note    = {\url{https://bugs.chromium.org/p/chromium/issues/detail?id=765433}},
  year    = {2017},
}

@misc{bugs-2,
  title   = {{Security: type confusion lead to information leak in decodeURI}},
  author  = {{Chromium Bugs}},
  note    = {\url{https://bugs.chromium.org/p/chromium/issues/detail?id=602970}},
  year    = {2016},
}

@misc{bugs-3,
  title   = {{Microsoft Edge: Chakra: JIT: BailOutOnInvalidatedArrayHeadSegment check bypass}},
  author  = {{Chromium Bugs}},
  note    = {\url{https://bugs.chromium.org/p/project-zero/issues/detail?id=1612}},
  year    = {2018},
}

@misc{bugs-4,
  title   = {{Microsoft Edge: Chakra: Type confusion with PathTypeHandlerBase::SetAttributesHelper}},
  author  = {{Chromium Bugs}},
  note    = {\url{https://bugs.chromium.org/p/project-zero/issues/detail?id=1586}},
  year    = {2018},
}

@inproceedings{wang:uroboros,
  title     = {{Reassembleable Disassembling}},
  author    = {Wang, Shuai and Wang, Pei and Wu, Dinghao},
  crossref  = {SEC15},
}

@inproceedings{wang:ramblr,
  title     = {{Ramblr: Making Reassembly Great Again}},
  author    = {Wang, Ruoyu and Shoshitaishvili, Yan and Bianchi, Antonio and Machiry, Aravind and Grosen, John and Grosen, Paul and Kruegel, Christopher and Vigna, Giovanni},
  crossref  = {NDSS17},
}

% DEP
@misc{windows:dep,
  title   = {{A detailed description of the Data Execution Prevention (DEP) feature in Windows XP Service Pack 2, Windows XP Tablet PC Edition 2005, and Windows Server 2003}},
  author  = {{Microsoft Support}},
  note    = {\url{https://support.microsoft.com/en-us/help/875352/a-detailed-description-of-the-data-execution-prevention-dep-feature-in}},
  year    = {2017},
}

@misc{lwn:dep,
  title   = {{x86 NX support}},
  author  = {{Jonathan Corbet}},
  note    = {\url{https://lwn.net/Articles/87814/}},
  year    = {2004},
}

% Stack Guard
@inproceedings{cowan:stackguard,
  title     = {{Stackguard: Automatic Adaptive Detection and Prevention of Buffer-overflow Attacks}},
  author    = {Cowan, Crispan and Pu, Calton and Maier, Dave and Walpole, Jonathan and Bakke, Peat and Beattie, Steve and Grier, Aaron and Wagle, Perry and Zhang, Qian and Hinton, Heather},
  crossref  = {SEC98}
}

@inproceedings{wagle:stackguard,
  title={Stackguard: Simple stack smash protection for gcc},
  author={Wagle, Perry and Cowan, Crispin and others},
  booktitle={Proceedings of the GCC Developers Summit},
  pages={243--255},
  year={2003},
}

@misc{windows:stackguard,
  title   = {{Microsoft Docs: /GS (Buffer Security Check)}},
  author  = {{Microsoft}},
  note    = {\url{https://docs.microsoft.com/en-us/cpp/build/reference/gs-buffer-security-check?view=vs-2019}},
  year    = {2019},
}

% shadow stack
@inproceedings{shadow-stack-dang-asiaccs15,
  title     = {{The Performance Cost of Shadow Stacks and Stack Canaries}},
  author    = {Dang, Thurston H.Y. and Maniatis, Petros and Wagner, David},
  crossref  = {ASIACCS15},
}

@inproceedings{shadesmar-burow-oakland19,
  title     = {{SoK: Shining Light on Shadow Stacks}},
  author    = {Nathan Burow and Xinping Zhang and Mathias Payer},
  crossref  = {SP19},
}

@article{ozdoganoglu:smashguard,
  title={{SmashGuard: A Hardware Solution to Prevent Security Attacks on the Function Return Address}},
  author={Ozdoganoglu, Hilmi and Vijaykumar, TN and Brodley, Carla E and Kuperman, Benjamin A and Jalote, Ankit},
  journal={IEEE Transactions on Computers},
  volume={55},
  number={10},
  pages={1271--1285},
  year={2006},
  publisher={IEEE}
}

@misc{clang:safestack,
  title   = {{Clang 10 documentation: SAFESTACK}},
  author  = {{The Clang Team}},
  note    = {\url{https://clang.llvm.org/docs/SafeStack.html}},
  year    = {2019},
}

@misc{ROPGadget,
  title   = {ROPgadget: Gadgets finder and auto-roper},
  author  = {Jonathan Salwan},
  note    = {\url{https://github.com/JonathanSalwan/ROPgadget}},
  year    = {2019},
}

% code inference attack
@inproceedings{zombie-gadget-snow-oakland16,
  title     = {{Return to the Zombie Gadgets: Undermining Destructive Code Reads via Code Inference Attacks}},
  author    = {K. Z. {Snow} and R. {Rogowski} and J. {Werner} and H. {Koo} and F. {Monrose} and M. {Polychronakis}},
  crossref  = {SP16},
}

@inproceedings{rerand-zombie-gadget-morton-essos17,
  title     = {{Defeating Zombie Gadgets by Re-randomizing Code upon Disclosure}},
  author    = {Morton, Micah and Koo, Hyungjoon and Li, Forrest and Snow, Kevin Z. and Polychronakis, Michalis and Monrose, Fabian},
  editor    = {Bodden, Eric and Payer, Mathias and Athanasopoulos, Elias},
  booktitle = {Engineering Secure Software and Systems},
  year      = {2017},
  publisher = {Springer International Publishing},
  pages     = {143--160},
}

@inproceedings{bgdx-pewny-acsac17,
  title     = {{Breaking and Fixing Destructive Code Read Defenses}},
  author    = {Pewny, Jannik and Koppe, Philipp and Davi, Lucas and Holz, Thorsten},
  crossref  = {ASIACCS17},
  pages     = {55--67},
}

@inproceedings{anc-gras-ndss17,
  title     = {{ASLR on the Line: Practical Cache Attacks on the MMU}},
  author    = {Gras, Ben and Razavi, Kaveh},
  crossref  = {NDSS17},
}

@inproceedings{morpheus-gallagher-asplos19,
  title     = {{Morpheus: A Vulnerability-Tolerant Secure Architecture Based on Ensembles of Moving Target Defenses with Churn}},
  author    = {Gallagher, Mark and Biernacki, Lauren and Chen, Shibo and Aweke, Zelalem Birhanu and Yitbarek, Salessawi Ferede and Aga, Misiker Tadesse and Harris, Austin and Xu, Zhixing and Kasikci, Baris and Bertacco, Valeria and Malik, Sharad and Tiwari, Mohit and Austin, Todd},
  crossref  = {ASPLOS19},
  pages     = {469--484},
}

@misc{musl-web,
  title     = {{musl libc}},
  year      = {2019},
  note      = {\url{https://wiki.musl-libc.org/}},
}

@misc{NGINX-web,
  title     = {{NGINX Web Server}},
  year      = {2019},
  note      = {\url{nginx.org/}},
}

@article{spec-cpu2006-web,
 author = {Henning, John L.},
 title = {SPEC CPU2006 Benchmark Descriptions},
 journal = {SIGARCH Comput. Archit. News},
 issue_date = {September 2006},
 volume = {34},
 number = {4},
 month = sep,
 year = {2006},
 pages = {1--17},
 url = {http://doi.acm.org/10.1145/1186736.1186737},
 doi = {10.1145/1186736.1186737},
 acmid = {1186737},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@inproceedings{librando-homescu-ccs13,
  title	    = {{librando: Transparent Code Randomization for Just-in-Time Compilers}},
  author    = {Homescu, Andrei and Brunthaler, Stefan and Larsen, Per and Franz, Michael},
  crossref  = {CCS13},
  pages     = {993--1004},
}

@inproceedings{cpi-kuznetsov-osdi14,
  title     = {{Code-pointer Integrity}},
  author    = {Kuznetsov, Volodymyr and Szekeres, L{\'a}szl{\'o} and Payer, Mathias and Candea, George and Sekar, R and Song, Dawn},
  crossref  = {OSDI14},
  pages     = {147--163},
}

@article{selfrando-conti-ppet16,
  title     = {{Selfrando: Securing the tor browser against de-anonymization exploits}},
  author    = {Conti, Mauro and Crane, Stephen and Frassetto, Tommaso and Homescu, Andrei and Koppen, Georg and Larsen, Per and Liebchen, Christopher and Perry, Mike and Sadeghi, Ahmad-Reza},
  journal   = {Proceedings on Privacy Enhancing Technologies},
  volume    = {2016},
  number    = {4},
  pages     = {454--469},
  year      = {2016},
  publisher = {De Gruyter Open},
}

@misc{multicompiler,
  title     = {{Multicompiler}},
  author    = {Immunant, University of California-Irvine},
  year      = {2018},
  note      = {\url{https://immunant.com/blog/2018/09/multicompiler}}
}

@misc{cve-by-type,
  title     = {Vulnerbility distribution of CVE security vulnerabilities by type},
  author    = {CVE Details},
  year      = {2019},
  note      = {\url{https://www.cvedetails.com/vulnerabilities-by-types.php}}
}

@inproceedings{aslrguard-lu-ccs15,
  title     = {{ASLR-Guard: Stopping address space leakage for code reuse attacks}},
  author    = {Lu, Kangjie and Song, Chengyu and Lee, Byoungyoung and Chung, Simon P and Kim, Taesoo and Lee, Wenke},
  crossref  = {CCS15},
  pages     = {280--291},
}

@inproceedings{probeguard-bhat-asplos19,
  title     = {{ProbeGuard: Mitigating Probing Attacks Through Reactive Program Transformations}},
  author    = {Bhat, Koustubha and Van Der Kouwe, Erik and Bos, Herbert and Giuffrida, Cristiano},
  crossref  = {ASPLOS19},
  pages={545--558},
}

%Address obfuscation
@inproceedings{addressobf-bhatkar-sec03,
  title={Address Obfuscation: An Efficient Approach to Combat a Broad Range of Memory Error Exploits.},
  author={Bhatkar, Sandeep and DuVarney, Daniel C and Sekar, Ron},
  booktitle={USENIX Security Symposium},
  volume={12},
  number={2},
  pages={291--301},
  year={2003}
}

@inproceedings{addrobfuscat-bhatkar-sec05,
  title={Efficient Techniques for Comprehensive Protection from Memory Error Exploits.},
  author={Bhatkar, Sandeep and DuVarney, Daniel C and Sekar, R},
  booktitle={USENIX Security Symposium},
  pages={17--17},
  year={2005}
}


@inproceedings{meltdown-lipp-sec18,
 author = {Moritz Lipp and Michael Schwarz and Daniel Gruss and Thomas Prescher and Werner Haas and Anders Fogh and Jann Horn and Stefan Mangard and Paul Kocher and Daniel Genkin and Yuval Yarom and Mike Hamburg},
 title = {Meltdown: Reading Kernel Memory from User Space},
 booktitle = {27th {USENIX} Security Symposium ({USENIX} Security 18)},
 year = {2018},
}

@inproceedings{spectre-kocher-sp19,
 author = {Paul Kocher and Jann Horn and Anders Fogh and and Daniel Genkin and Daniel Gruss and Werner Haas and Mike Hamburg and Moritz Lipp and Stefan Mangard and Thomas Prescher and Michael Schwarz and Yuval Yarom},
 title = {Spectre Attacks: Exploiting Speculative Execution},
 booktitle = {40th IEEE Symposium on Security and Privacy (S\&P'19)},
 year = {2019},
}

@inproceedings{remix-chen-codaspy16,
 author = {Chen, Yue and Wang, Zhi and Whalley, David and Lu, Long},
 title = {Remix: On-demand Live Randomization},
 booktitle = {Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy},
 series = {CODASPY '16},
 year = {2016},
 isbn = {978-1-4503-3935-3},
 location = {New Orleans, Louisiana, USA},
 pages = {50--61},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2857705.2857726},
 doi = {10.1145/2857705.2857726},
 acmid = {2857726},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {application and kernel, aslr, code reuse attack defense, live randomization, operating system security, randomization, software security},
}

@inproceedings{stabilizer-curtsinger-sigplan13,
  title={STABILIZER: statistically sound performance evaluation},
  author={Curtsinger, Charlie and Berger, Emery D},
  booktitle={ACM SIGPLAN Notices},
  volume={48},
  number={4},
  pages={219--228},
  year={2013},
  organization={ACM}
}

@inproceedings{safehidden-wang-sec19,
  title={SafeHidden: An Efficient and Secure Information Hiding Technique Using Re-randomization},
  author={Wang, Zhe and Wu, Chenggang and Zhang, Yinqian and Tang, Bowen and Yew, Pen-Chung and Xie, Mengyao and Lai, Yuanming and Kang, Yan and Cheng, Yueqiang and Shi, Zhiping},
  booktitle={28th $\{$USENIX$\}$ Security Symposium ($\{$USENIX$\}$ Security 19)},
  pages={1239--1256},
  year={2019}
}

@inproceedings{imix-frassetto-sec18,
  title={IMIX: in-process memory isolation extension},
  author={Frassetto, Tommaso and Jauernig, Patrick and Liebchen, Christopher and Sadeghi, Ahmad-Reza},
  booktitle={Proceedings of the 27th USENIX Conference on Security Symposium},
  pages={83--97},
  year={2018},
  organization={USENIX Association}
}

@inproceedings{microstache-mogosanu-israid18,
  title={MicroStache: A Lightweight Execution Context for In-Process Safe Region Isolation},
  author={Mogosanu, Lucian and Rane, Ashay and Dautenhahn, Nathan},
  booktitle={International Symposium on Research in Attacks, Intrusions, and Defenses},
  pages={359--379},
  year={2018},
  organization={Springer}
}

@inproceedings{dfi-castro-osdi06,
  author = {Castro, Miguel and Costa, Manuel and Harris, Tim},
  title = {{Securing Software by Enforcing Data-flow Integrity}},
  crossref  = {OSDI06},
  pages = {147--160},
  numpages = {14},
}

@inproceedings{libmpk-park-atc19,
 author = {Park, Soyeon and Lee, Sangho and Xu, Wen and Moon, Hyungon and Kim, Taesoo},
 title = {{Libmpk: Software Abstraction for Intel Memory Protection Keys (Intel MPK)}},
  crossref  = {ATC19},
 pages = {241--254},
 numpages = {14},
}

@inproceedings{hodor-hedayati-atc19,
  title={{Hodor: Intra-Process Isolation for High-Throughput Data Plane Libraries}},
  author={Hedayati, Mohammad and Gravani, Spyridoula and Johnson, Ethan and Criswell, John and Scott, Michael L and Shen, Kai and Marty, Mike},
  crossref  = {ATC19},
}

@inproceedings{erim-vahldiek-sec19,
  title={{ERIM: Secure, Efficient In-process Isolation with Protection Keys (MPK)}},
  author={Vahldiek-Oberwagner, Anjo and Elnikety, Eslam and Duarte, Nuno O and Sammler, Michael and Druschel, Peter and Garg, Deepak},
  crossref  = {SEC19},
  pages={1221--1238},
}

@inproceedings{pku-pitfalls-conner-sec20,
  title    = {PKU Pitfalls: Attacks on PKU-based Memory Isolation Systems},
  author   = {{R. Joseph Connor and Tyler McDaniel and Jared M. Smith and Max Schuchard}},
  crossref = {SEC20},
}

@misc{levee-web,
  title   = {{Code-Pointer Integrity: Levee prototype implementation}},
  author  = {{The Clang Team}},
  note    = {\url{https://github.com/cpi-llvm}},
}

@inproceedings{shredder-mishra-assac18,
 author = {Mishra, Shachee and Polychronakis, Michalis},
 title = {{Shredder: Breaking Exploits Through API Specialization}},
 crossref = {ACSAC18},
 pages = {1--16},
 numpages = {16},
}

@misc{chromium-multiproc-web,
  title   = {{Multi-process Architecture}},
  author  = {{The Chromium Projects}},
  note    = {\url{https://www.chromium.org/developers/design-documents/multi-process-architecture}},
}

@misc{chromium-plugin-web,
  title   = {{Plugin Architecture}},
  author  = {{The Chromium Projects}},
  note    = {\url{https://www.chromium.org/developers/design-documents/plugin-architecture}},
}

@misc{mysql-connection-thread-web,
  title   = {{5.6.3 MySQL Enterprise Thread Pool}},
  author  = {{MySQL}},
  note    = {\url{https://dev.mysql.com/doc/refman/8.0/en/thread-pool.html}},
}

@misc{mysql-innodb-thread-web,
  title   = {{15.8.5 Configuring the Number of Background InnoDB I/O Threads}},
  author  = {{MySQL}},
  note    = {\url{https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-multiple_io_threads.html}},
}

@misc{mariadb-connection-thread-web,
  title   = {{Thread Pool System and Status Variables}},
  author  = {{MariaDB}},
  note    = {\url{https://mariadb.com/kb/en/library/thread-pool-system-status-variables/}},
}

@inproceedings{piecewise-quach-sec18,
  title    = {{Debloating software through piece-wise compilation and loading}},
  author   = {Quach, Anh and Prakash, Aravind and Yan, Lok},
  crossref = {SEC18},
  pages    = {869--886},
}

@inproceedings{razor-qian-sec19,
  title    = {{RAZOR: A Framework for Post-deployment Software Debloating}},
  author   = {Chenxiong Qian and Hong Hu and Mansour A Alharthi and Pak Ho Chung and Taesoo Kim and Wenke Lee},
  crossref = {SEC19},
}

@inproceedings{chisel-heo-ccs18,
 title = {{Effective Program Debloating via Reinforcement Learning}},
 author = {Heo, Kihong and Lee, Woosuk and Pashakhanloo, Pardis and Naik, Mayur},
 crossref = {CCS18},
 pages = {380--394},
}

% DFI
@inproceedings{hdfi-song-sp16,
  title    = {{HDFI: Hardware-Assisted Data-flow Isolation}},
  author   = {Chengyu Song and Hyungon Moon and Monjur Alam and Insu Yun and Byoungyoung Lee and Taesoo Kim and Wenke Lee and Yunheung Pack},
  crossref = {SP16},
}

@inproceedings{kenali-song-ndss16,
  title    = {{Enforcing Kernel Security Invariants with Data Flow Integrity.}},
  author   = {Song, Chengyu and Lee, Byoungyoung and Lu, Kangjie and Harris, William and Kim, Taesoo and Lee, Wenke},
  crossref = {NDSS16},
}

% Allocator
@inproceedings{freeguard-silvestro-ccs17,
  title    = {{FreeGuard: A Faster Secure Heap Allocator}},
  author   = {Sam Silvestro and Hongyu Liu and Corey Crosser and Zhiqiang Lin and Tongping Liu},
  crossref = {CCS17},
}

@inproceedings{guarder-silvestro-sec18,
  title    = {{Guarder: A Tunable Secure Allocator}},
  author   = {Sam Silvestro and Hongyu Liu and Tianyi Liu and Zhiqiang Lin and Tongping Liu},
  crossref = {SEC18},
}

@misc{poisonnull-evans-web,
  title 	= {{The poisoned NUL byte, 2014 edition}},
  author	= {Chris Evans},
  year      = {2014},
  note      = {\url{https://googleprojectzero.blogspot.com/2014/08/the-poisoned-nul-byte-2014-edition.html}},
}

% Heap protection
@inproceedings{diehard-berger-pldi06,
  author = {Berger, Emery D. and Zorn, Benjamin G.},
  title = {{DieHard: Probabilistic Memory Safety for Unsafe Languages}},
  crossref = {PLDI06},
  year = {2006},
}

@inproceedings{dieharder-novark-ccs10,
  author = {Novark, Gene and Berger, Emery D.},
  title = {{DieHarder: Securing the Heap}},
  crossref = {CCS10},
  year = {2010},
  pages = {573–584},
}

@inproceedings{heaphopper-eckert-sec18,
  title    = {{HeapHopper: Brining Bounded Model Checking to Heap Implementation Security}},
  author   = {Moritz Eckert and Antonio Bianchi and Ruoyu Wang and Yan Shoshitaishvili and Christopher Kruegel and Giovanni Vigna},
  crossref = {SEC18},
}

@inproceedings{archeap-yun-sec20,
  title    = {{Automatic Techniques to Systematically Discover New Heap Exploitation Primitives}},
  author   = {Insu Yun and Dhaval Kapil and Taesoo Kim},
  crossref = {SEC20},
}

@misc{ptmalloc-fsf,
  title   = {{MallocInternals - glibc wiki}},
  author  = {{Free Software Foundation}},
  note    = {\url{https://sourceware.org/glibc/wiki/MallocInternals}},
  year    = {2019},
}

% mpk
@inproceedings{memsentry-koning-eurosys17,
  author = {Koning, Koen and Chen, Xi and Bos, Herbert and Giuffrida, Cristiano and Athanasopoulos, Elias},
  title = {{No Need to Hide: Protecting Safe Regions on Commodity Hardware}},
  crossref = {EUROSYS17},
  pages = {437–452},
  numpages = {16},
}

% CVE
@misc{cve-2016-10190-exploit,
  title   = {{CVE-2016-10190 Detailed Writeup}},
  author  = {{Nandy Narwhals CTF Team}},
  note    = {\url{https://nandynarwhals.org/cve-2016-10190/}},
  year    = {2017},
}

@misc{cve-2015-8668-exploit,
  title   = {{CVE-2015-8668}},
  author  = {{Dongliang Mu}},
  note    = {\url{cve-2015-8668-exploit}},
  year    = {2018},
}

@misc{cve-2014-1912-exploit,
  title   = {{Python - 'socket.recvfrom{\_}into()' Remote Buffer Overflow}},
  author  = {{@sha0coder}},
  url    = {https://www.exploit-db.com/exploits/31875},
  year    = {2014},
}

@misc{cfixx-test-suite-burow-web,
  title   = {{CFIXX C++ test suite}},
  author  = {{Nathan Burow}},
  note    = {\url{https://github.com/HexHive/CFIXX/tree/master/CFIXX-Suite}},
  year    = {2018},
}

@misc{unlink-exploit-kapil-web,
  title   = {{Unlink Exploit}},
  author  = {{Dhaval Kapil}},
  note    = {\url{https://heap-exploitation.dhavalkapil.com/attacks/unlink_exploit.html}},
  year    = {2019},
}

@inproceedings{vtint-zhang-ndss15,
  title    = {{VTint: Protecting Virtual Function Tables' Integrity}},
  author   = {Zhang, Chao and Song, Chengyu and Chen, Kevin Zhijie and Chen, Zhaofeng and Song, Dawn},
  crossref = {NDSS15},
}

@inproceedings{bogo-zhang-asplos19,
  author = {Zhang, Tong and Lee, Dongyoon and Jung, Changhee},
  title = {{BOGO: Buy Spatial Memory Safety, Get Temporal Memory Safety (Almost) Free}},
  crossref = {ASPLOS19},
  pages = {631–644},
  numpages = {14},
}

@inproceedings{softbound-cets-nagarakatte-snapl16,
  title={{Everything you want to know about pointer-based checking}},
  author={Nagarakatte, Santosh and Martin, Milo MK and Zdancewic, Steve},
  booktitle={1st Summit on Advances in Programming Languages (SNAPL 2015)},
  year={2015},
  organization={Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}
}

@inproceedings{addresssanitizer-serebryany-atc12,
  title={{AddressSanitizer: A fast address sanity checker}},
  author={Serebryany, Konstantin and Bruening, Derek and Potapenko, Alexander and Vyukov, Dmitriy},
  crossref = {ATC12},
  pages={309--318},
}

@inproceedings{cfi-lb-khandaker-eurosp19,
  title={Adaptive Call-site Sensitive Control Flow Integrity},
  author={Khandaker, Mustakimur and Naser, Abu and Liu, Wenqing and Wang, Zhi and Zhou, Yajin and Cheng, Yueqiang},
  booktitle={2019 IEEE European Symposium on Security and Privacy (EuroS\&P)},
  pages={95--110},
  year={2019},
  organization={IEEE}
}

@misc{dlmalloc-lea-web,
  title   = {{A Memory Allocator}},
  author  = {{Doug Lea}},
  note    = {\url{http://gee.cs.oswego.edu/dl/html/malloc.html}},
  year    = {2000},
}

@misc{tcmalloc-google-web,
  title   = {{TCMalloc}},
  author  = {{Google}},
  note    = {\url{https://google.github.io/tcmalloc/}},
}

@inproceedings{mardu-jelesnianski-systor20,
  author    = {Christopher Jelesnianski and
               Jinwoo Yom and
               Changwoo Min and
               Yeongjin Jang},
  title     = {{MARDU:} Efficient and Scalable Code Re-randomization},
  booktitle = {{SYSTOR} 2020: The 13th {ACM} International Systems and Storage Conference,
               Haifa, Israel, October 13-15, 2020},
  pages     = {49--60},
  publisher = {{ACM}},
  year      = {2020},
}

@misc{mardu-jelesnianski-arxiv19,
    title={{Making Code Re-randomization Practical with MARDU}},
    author={Christopher Jelesnianski and Jinwoo Yom and Changwoo Min and Yeongjin Jang},
    year={2019},
    eprint={1909.09294},
    archivePrefix={arXiv},
    primaryClass={cs.CR}
}

@article{pomacs18,
  author={Oleksenko, Oleksii and Kuvaiskii, Dmitrii and Bhatotia, Pramod and Felber, Pascal and Fetzer, Christof},
  title={{Intel MPX Explained: A Cross-layer Analysis of the Intel MPX System Stack}},
  journal={Proceedings of the ACM on Measurement and Analysis of Computing Systems},
  year = {2018},
}

@misc{spp-yi-lkml17,
  title   = {Intel EPT-Based Sub-page Write Protection Support}},
  author  = {{Zhang Yi}},
  note    = {\url{https://lwn.net/Articles/736322/}},
  year    = {2017},
}

@inproceedings{pittypat-ding-sec17,
  title={{Efficient protection of path-sensitive control security}},
  author={Ding, Ren and Qian, Chenxiong and Song, Chengyu and Harris, Bill and Kim, Taesoo and Lee, Wenke},
  pages={131--148},
  crossref  = {SEC17}
}

@inproceedings{fuzzos-xu-ccs17,
  author    = {Wen Xu and
               Sanidhya Kashyap and
               Changwoo Min and
               Taesoo Kim},
  title     = {Designing New Operating Primitives to Improve Fuzzing Performance},
  pages     = {2313--2328},
  crossref  = {CCS17},
}
